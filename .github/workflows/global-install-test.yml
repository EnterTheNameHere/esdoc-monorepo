name: Global installation test
on:
  # Allows running this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16]
    steps:
    - name: "Setting up Node.js v${{ matrix.node-version }}..."
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: "Checking out ESDoc source code..."
      uses: actions/checkout@v3
    
    - name: "Installing monorepo workspace dependencies..."
      run: |
        npm ci
    
    - name: "Packaging monorepo archives for installation..."
      run: |
        npm pack -ws
    
    - name: "Debug: list archives"
      run: |
        ls *.tgz
    
    - name: "Installing ESDoc with Standard plugin globally from generated archives..."
      run: |
        for file in ./*.tgz; do if [[ -f "$file" ]]; then echo "Installing $file"; npm install "$file" --global --ignore-scripts --no-package-lock --no-save; fi; done
    
    - name: "Debug: npm list -g"
      run: |
        npm list -g
    
    - name: Find global package.json files
      id: find-package-json-global
      run: |
        find "$( npm prefix -g )" -maxdepth 5 -name "package.json" -type f
    
    - name: Output package.json contents
      run: |
        for packageJsonFile in ${{ steps.find-package-json-global.outputs.stdout }}
        do
          echo "Contents of $packageJsonFile:"
          cat $packageJsonFile
          echo "============================="
        done
    
    - name: "Debug: list packages in local directory pre test"
      run: |
        npm list
    
    - name: "Running tests..."
      run: npm run test:execute
    
    - name: "Debug: list packages in local directory post test"
      run: |
        npm list

    - name: Find local package.json files
      id: find-package-json-local
      run: |
        find ./node_modules -maxdepth 5 -name "package.json" -type f
    
    - name: Output package.json contents
      run: |
        for packageJsonFile in ${{ steps.find-package-json-local.outputs.stdout }}
        do
          echo "Contents of $packageJsonFile:"
          cat $packageJsonFile
          echo "============================="
        done
