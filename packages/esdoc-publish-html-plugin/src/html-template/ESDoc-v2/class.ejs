<% include('utils'); -%><%#- utils.var_dump(locals) -%>
<!-- class.ejs -->
<div class="header-notice">
  <%
  if(cls.importString && cls.sourceLink)
  {
    %><div data-ice="importPath" class="import-path">
      <pre class="prettyprint"><code data-ice="importPathCode"><%- utils.highlight(cls.importString || ''); -%> '<%- renderLink(cls.sourceLink); %>'</code></pre>
    </div><%
  }
  if(cls.access) { %><span data-ice="access"><%= cls.access %></span><% }
  if(cls.kind) { %><span data-ice="kind"><%= cls.kind %></span><% }
  if(cls.variation) {
    console.log('\nHey asshole, implement cls.variation in class.ejs!\n');
    %><span style="background-color: red; color: white;">Tell myself to implement this!</span><span data-ice="variation">| variation</span><%
  }
  if(cls.version) { %><span data-ice="version">| version <%= cls.version %></span><% }//if
  if(cls.since) { %><span data-ice="since">| since <%= cls.since %></span><% }//if
  if(cls.sourceFileLink) {_%><span data-ice="source">| <%- renderLink(cls.sourceFileLink); %></span><% }//if %>
</div>
<div class="self-detail detail">
  <%
  if(cls.name) { %><h1 data-ice="name"><%= cls.name %></h1><% }//if
  if(cls?.instancesData?.length > 0)
  {
    %>
  <div data-ice="instanceDocs" class="instance-docs"><span>You can directly use an instance of this class.</span><span data-ice="instanceDoc"><%
    const length = cls.instancesData.length-1;
    cls.instancesData.forEach((value, index) => { %><span class="instance"><%- renderLink(value); %></span><%
    if(index < length) { %><span class="instance comma">, </span><% }
    });
    %></span>
  </div><%
  }//if(cls.instancesData)
  
  if(cls?.extendsData)
  { %>
  <div class="expression-extends" data-ice="expressionExtends"><%
    let extendsExpression = utils.highlight(`class ${cls.name} extends ${cls.extendsData.expression}`);
    for(const link of cls.extendsData.links)
    {
      if(link.href)
      {
        extendsExpression = extendsExpression.replace(link.text, `<a href="${link.href}">${link.text}</a>`);
      }
    }
    %>
    <h4>Expression Extends:</h4>
    <code data-ice="expressionExtendsCode"><%- extendsExpression _%></code>
  </div>
  <%
  }//if(cls.extendsData)

  if(cls?.mixinClassesData?.length > 0)
  {
    %><div class="flat-list" data-ice="mixinExtends">
      <h4>Mixin Extends:</h4>
    </div>
    <div>
      <%
      const length = cls.mixinClassesData.length-1;
      cls.mixinClassesData.forEach((link, index) => {
        %><%- renderLink(link); %><%
        if(index < length) { %>, <% }
      });
      %>
    </div>
    <%
  }//if(cls.mixinClassesData)
  
  if(cls?.extendsChainData?.length)
  { %><div class="flat-list" data-ice="extendsChain">
    <h4>Extends:</h4>
  </div>
  <div>
    <%
    // Display chain of links: link -> link -> name of class. Array elements are link(href,text) and last is just string with class name.
    const length = cls.extendsChainData.length-1;
    cls.extendsChainData.forEach((link, index) => {
      if(index < length) { %><%- renderLink(link); %> â†’ <% } else { %><%= link %><% } }); %>
  </div>
  <%
  }//if(cls.extendsChainData)
  
  if(cls?.directSubclassData?.length)
  {
    %><div class="flat-list" data-ice="directSubclass">
      <h4>Direct Subclass:</h4>
    </div>
    <div>
      <ul><%
        const length = cls.directSubclassData.length-1;
        cls.directSubclassData.forEach((link, index) =>
        {
        %>
        <li><span><%- renderLink(link); %></span></li><%
          if(index < length) { %>, <% }
        });
        %>
      </ul>
    </div><%
  }//if(cls.directSubclassData)

  if(cls?.indirectSubclassData?.length)
  {
    %><div class="flat-list" data-ice="indirectSubclass">
      <h4>Indirect Subclass:</h4>
    </div>
    <div>
      <%
      const length = cls.indirectSubclassData.length-1;
      cls.indirectSubclassData.forEach((link, index) =>
      { %><%- renderLink(link); %><%
        if(index < length) { %>, <% }
      }); %>
    </div><%
  }//if(cls.indirectSubclassData)

  if(cls?.implementsData?.length)
  {
    %>
    <div class="flat-list" data-ice="implements">
      <h4>Implements:</h4>
      <ul><%
        const length = cls.implementsData.length-1;
        cls.implementsData.forEach((link, index) =>
        {
        %>
        <li><span><%- renderLink(link); %></span></li><%
          if(index < length) { %>, <% }
        });
        %>
      </ul>
    </div>
  <%
  }//if(cls.implementsData)
  
  if(cls?.indirectImplementsData?.length)
  { %><div class="flat-list" data-ice="indirectImplements">
    <h4>Indirect Implements:</h4>
  </div>
  <div><%
    console.log('\nHey asshole, implement cls.indirectImplementsData in class.ejs\n');
    %>
    <span style="background-color: red; color: white;">Tell myself to implement this!</span>
  </div>
  <%
  }//if(cls.indirectImplementsData)

  if(cls?.directImplementedData?.length)
  { %><div class="flat-list" data-ice="directImplemented">
    <h4>Direct Implemented:</h4>
  </div>
  <div>
    <ul>
      <% cls.directImplementedData.forEach((link) => { %><li><span><%- renderLink(link); %></span></li><% }); %>
    </ul>
  </div>
  <%
  }//if(cls.directImplementedData)
  
  if(cls?.indirectImplementedData?.length)
  {
    %><div class="flat-list" data-ice="indirectImplemented">
      <h4>Indirect Implemented:</h4>
    </div>
    <div><%
      console.log('\nHey asshole, implement cls.indirectImplementedData in class.ejs\n');
      %>
      <span style="background-color: red; color: white;">Tell myself to implement this!</span>
    </div>
  <%
  }//if
  
  if(cls?.deprecated) { %>
    <div class="deprecated" data-ice="deprecated"><%= cls.deprecated %></div>
  <% }
  if(cls?.experimental) {
    %><div class="experimental" data-ice="experimental"><%= cls.experimental %></div>
  <% }
  if(cls?.description) {
    %><div class="description" data-ice="description"><%- cls.description // Description can use markdown, so render it with html enabled %></div>
  <% }
  
  if(cls?.decoratorData)
  {
    %><div class="decorator" data-ice="decorator">
      <h4>Decorators:</h4>
    </div>
    <div><%
      console.log('\nHey asshole, implement cls.decoratorData in class.ejs\n');
      %>
      <span style="background-color: red; color: white;">Tell myself to implement this!</span>
    </div>
  <%
  }//if
  
  if(cls?.seeData)
  {
    %><div data-ice="see">
      <h4>See:</h4>
    </div>
    <div><%
      console.log('\nHey asshole, implement cls.seeData in class.ejs\n');
      %>
      <span style="background-color: red; color: white;">Tell myself to implement this!</span>
    </div>
  <%
  }//if
  
  if(cls?.examplesData?.length > 0)
  {
    %><div data-ice="exampleDocs">
      <h4>Example:</h4>
      <div><%
        console.log('\nHey asshole, implement cls.examplesData in class.ejs\n');
        %>
        <span style="background-color: red; color: white;">Tell myself to implement this!</span>
      </div>
    </div>
  <%
  }//if
  
  if(cls?.testsData?.length)
  {
    %><div data-ice="tests">
      <h4>Test:</h4>
      <div><%
        console.log('\nHey asshole, implement cls.testsData in class.ejs\n');
        %>
        <span style="background-color: red; color: white;">Tell myself to implement this!</span>
      </div>
    </div>
  <%
  }//if
  if(cls?.todoData?.length)
  {
    %><div data-ice="todo">
      <h4>TODO:</h4>
      <div><%
        console.log('\nHey asshole, implement cls.todoData in class.ejs\n');
        %>
        <span style="background-color: red; color: white;">Tell myself to implement this!</span>
      </div>
    </div>
  <%
  }//if
  %>
</div>
<%

if(cls?.staticMemberSummaryData?.length > 0)
{
  %><div data-ice="staticMemberSummary">
    <h2>Static Member Summary</h2>
  </div>
  <%
  for(const data of cls.staticMemberSummaryData)
  {
    %><%- include('summary.ejs', {...data}); %>
    <%
  }//for
}//if

if(cls?.staticMethodSummaryData?.length > 0)
{
  %><div data-ice="staticMethodSummary">
    <h2>Static Method Summary</h2>
  </div>
  <%
  for(const data of cls.staticMethodSummaryData)
  {
    %><%- include('summary.ejs', {...data}); %>
    <%
  }//for
}//if

if(cls?.constructorSummaryData?.length > 0)
{
  %><div data-ice="constructorSummary">
    <h2>Constructor Summary</h2>
  </div>
  <% for(const data of cls.constructorSummaryData)
  {
    %><%- include('summary.ejs', {...data}); %>
    <%
  }//for
}//if

if(cls?.membersSummaryData?.length > 0)
{
  %><div data-ice="memberSummary">
    <h2>Member Summary</h2>
  </div>
  <% for(const data of cls.membersSummaryData)
  {
    %><%- include('summary.ejs', {...data}); %>
    <%
  }//for
}//if

if(cls?.methodsSummaryData?.length > 0)
{
  %><div data-ice="methodSummary">
    <h2>Method Summary</h2>
  </div>
  <%
  for(const data of cls.methodsSummaryData)
  {
    %><%- include('summary.ejs', {...data}); %>
    <%
  }//for
}//if


// array might be populated, so make sure at least one summary is present before trying to render it
if(cls?.inheritedSummaryData?.length > 0 && cls.inheritedSummaryData.some((inheritedFromCls) => { return inheritedFromCls.summary !== false; }))
{
  %><div class="inherited-summary" data-ice="inheritedSummary">
    <h2>Inherited Summary</h2>
  </div>
  <%
  for(const inheritedFromCls of cls.inheritedSummaryData)
  {
    if(inheritedFromCls.summary) {
      // HACK: make title an object, so summary can render it as toggleable element
      const title = {kind: inheritedFromCls.kind, link: inheritedFromCls.link}
      %><%- include('summary.ejs', {...inheritedFromCls.summary, title: title}); %>
      <%
    }//if
  }//for
}//if(cls.inheritedSummaryData)

if(cls?.staticMemberDetailsData?.length > 0)
{
  %><div data-ice="staticMemberDetails"><%
    for(const member of cls.staticMemberDetailsData)
    {
      %><%- include('details.ejs', {data: member}); %>
      <%
    }//for
    %>
  </div>
  <%
}//if(cls?.staticMemberDetailsData)

if(cls?.staticMethodDetailsData?.length > 0)
{
  %><div data-ice="staticMethodDetails">
    <%
    for(const method of cls.staticMethodDetailsData)
    {
      %><%- include('details.ejs', {data: method}); %>
      <%
    }//for
    %>
  </div>
  <%
}//if(cls.staticMethodDetailsData)

if(cls?.constructorDetailsData?.length > 0)
{
  %><div data-ice="constructorDetails">
    <%
    for(const constr of cls.constructorDetailsData)
    {
      %><%- include('details.ejs', {data: constr}); %>
      <%
    }//for
    %>
  </div>
  <%
}//if(cls.constructorDetailsData)

if(cls?.membersDetailsData?.length > 0)
{
  %><div data-ice="memberDetails">
    <%
    for(const member of cls.membersDetailsData)
    {
      %><%- include('details.ejs', {data: member}); %>
      <%
    }//for
    %>
  </div>
  <%
}//if(cls.membersDetailsData)

if(cls?.methodsDetailsData?.length > 0)
{
  %><div data-ice="methodDetails">
    <%
    for(const method of cls.methodsDetailsData)
    {
      %><%- include('details.ejs', {data: method}); %>
      <%
    }//for
    %>
  </div><%
}//if(cls.methodsDetailsData)
-%>
<!-- class.ejs ends -->
