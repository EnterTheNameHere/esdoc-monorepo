<% include('utils'); -%><%#- utils.var_dump(locals); -%>
<!-- details.ejs -->
<%
if(data?.details?.length > 0)
{
  if(data?.title)
  {
    %><h2 data-ice="title"><%= data.title %></h2><%
  }
  
  for(const detail of data?.details) { -%><%#- utils.var_dump(detail); -%><%
    %><div class="detail" data-ice="detail">
      <h3 data-ice="anchor" id="<%= detail.anchor %>"><%
        if(detail?.access)         { %><span class="access" data-ice="access"><%= detail.access %></span> <% }
        if(detail?.static)         { %><span data-ice="static">static</span> <% }
        if(detail?.kind)           { %><span class="kind" data-ice="kind"><%= detail.kind %></span> <% }
        if(detail?.abstract)       { %><span class="abstract" data-ice="abstract">abstract</span> <% }
        if(detail?.async)          { %><span data-ice="async">async</span> <% }
        if(detail?.generator)      { %><span data-ice="generator">*</span><% }
        if(detail?.name)           { %><span class="code" data-ice="name"><%= detail.name %></span><% }
        if(detail?.signatureData)
        {
          %><span class="code" data-ice="signature"><%
          // render params
          if(detail?.signatureData?.params)
          {
            %><span class="signature-params"><%- include('signature.ejs', {
            // HACK: detail.signatureData.params is already hacked to be single jsdoc notation object, so pass it
            root: detail.signatureData.params }); %></span><%
          }
          // render return types
          if(detail?.signatureData?.return)
          {
            %><span class="signature-return-part"><span class="signature-return-colon">:</span><%- include('signature.ejs', {root: detail.signatureData.return}); %></span><%
          }
          // render type data
          if(detail?.signatureData?.type?.length > 0) {
            %><span class="signature type colon">:</span><%- include('signature.ejs', {root: detail.signatureData.type[0]}); %><%
          }
        %></span><%
        }//if(detail.signatureData)

        if(detail.version || detail.since || detail.sourceFileLink)
        { %><span class="right-info"><%
          if(detail.version) { %><span class="version" data-ice="version">version <%= detail.version %></span><% }//if 
          if(detail.since) { %><span class="since" data-ice="since">since <%= detail.since %></span><% }//if 
          if(detail.sourceFileLink) { %><span data-ice="source"><%- renderLink(detail.sourceFileLink) %></span><% }//if
          %></span><%
        }//if
      %></h3>
      <%
      if(detail?.sourceLink && detail?.importString)
      {
        %><div data-ice="importPath" class="import-path">
          <pre class="prettyprint"><code data-ice="importPathCode"><%- utils.highlight(detail.importString) %> '<%- renderLink(detail.sourceLink) %>'</code></pre>
        </div>
      <%
      }//if(detail.sourceLink && detail.importString)
      if(detail?.deprecated)         { %><div class="deprecated" data-ice="deprecated"><%= detail.deprecated %></div><% }
      if(detail?.experimental)       { %><div class="experimental" data-ice="experimental"><%= detail.experimental %></div><% }
      if(detail?.description)        { %><div data-ice="description"><%- detail.description // Description can use markdown, so render it with html enabled %></div><% }
      if(detail?.override)           { %><div data-ice="override"><h4>Override:</h4><%- renderLink(detail.override) %></div><% }
      if(detail?.properties)
      {
        %><div data-ice="properties">
          <%- include('properties.ejs', detail.properties); %>
        </div>
        <%
      }
      
      if(detail?.return)
      { %><div class="return-params" data-ice="returnParams">
        <h4>Return:</h4>
        <table>
          <tbody>
            <tr>
              <td class="return-type code" data-ice="returnType"><%- include('signature.ejs', {root: detail.return}); %></td>
              <td class="return-desc" data-ice="returnDescription"><%
                if(detail.return.description)
                {
                  %><%- detail.return.description // Description can use markdown, so render it with html enabled %><%
                }
                %>
              </td>
            </tr>
          </tbody>
        </table>
        <div data-ice="returnProperties"></div>
      </div>
      <%
      }//if(detail.return)
      
      if(detail?.emits?.length)
      {
        %><div data-ice="emitWrap">
          <h4>Emits:</h4>
          <table>
            <tbody>
              <%
              for(const emit of detail.emits)
              { %><tr class="emit" data-ice="emit">
                <td><p data-ice="emitName"><%- renderLink(emit.link) %></p></td>
                <td data-ice="emitDesc"><%- emit.description // Description can use markdown, so render it with html enabled %></td>
              </tr>
              <%
              }//for 
              -%>
            </tbody>
          </table>
        </div>
      <%
      }//if(detail.emits)
      
      if(detail?.listens?.length)
      {
        %><div data-ice="listenWrap">
          <h4>Listens:</h4>
          <table>
            <tbody>
              <%
              for(const listen of detail.listens)
              { %><tr class="listen" data-ice="listen">
                <td><p data-ice="listenName"><%- renderLink(listen.link); %></p></td>
                <td data-ice="listenDesc"><%- listen.description // Description can use markdown, so render it with html enabled %></td>
              </tr>
              <%
              }//for
              -%>
            </tbody>
          </table>
        </div>
      <%
      }//if(detail.listens)
      
      if(detail?.throws?.length)
      {
        %><div data-ice="throwWrap">
          <h4>Throws:</h4>
          <table>
            <tbody>
              <%
              for(const oThrow of detail.throws)
              { %><tr class="throw" data-ice="throw">
                <td><p data-ice="throwName"><%- renderLink(oThrow.link); %></p></td><%
                  %><td data-ice="throwDesc"><%- oThrow.description // Description can use markdown, so render it with html enabled %></td>
                </tr>
              <%
              }//for
              -%>
            </tbody>
          </table>
        </div><%
      }//if(detail.throws)

      if(detail?.decorators)
      {
        %><div data-ice="decorator">
          <h4>Decorators:</h4>
          <ul>
            <% detail.decorators.forEach((decorator) => { %><li><span><%- renderLink(decorator.link); %><% if(decorator.arguments) { %><%= decorator.arguments %><% } %></span></li><% }); %>
          </ul>
        </div>
      <% }//if(detail.decorators)

      if(detail?.examples?.length)
      { %><div data-ice="example">
        <h4>Examples:</h4>
        <%
        for(const example of detail.examples)
        { %><div class="example-doc" data-ice="exampleDoc">
          <div class="example-caption" data-ice="exampleCaption"><%= example.caption %></div>
          <pre class="prettyprint source-code"><code class="example-code" data-ice="exampleCode"><%- example.body %></code></pre>
        </div><%
        }//for
        %>
      </div>
      <%
      }//if(detail.examples)

      if(detail?.tests?.length)
      { %><div data-ice="tests">
        <h4>Tests:</h4>
        <ul>
          <%
          for(const test of detail.tests)
          {
            %><li data-ice="test"><%- renderLink(test.link) %></li><%
          }//for
          %>
        </ul>
      </div>
      <%
      }//if(detail.tests)
      
      if(detail?.seeLinks?.length)
      { %><div data-ice="see">
        <h4>See:</h4>
        <ul>
          <%
          for(const link of detail.seeLinks)
          {
            detail.seeLinks.forEach((link) =>
            {
              %><li><span><%
                if(link.href) { %><a href="<%= link.href %>"><% }//if
                // link.text might already be in <a ...>...</a> format with href false, so check for it
                if(link.text.startsWith('<a ')) { %><%- link.text %><% } else { %><%= link.text %><% }//if
                if(link.href) { %></a><% }//if
                %></span></li>
                <%
              });
          }//for
          %>
        </ul>
      </div>
      <%
      }//if(detail.seeLinks)

      if(detail.todoLinks?.length)
      {
        %><div data-ice="todo">
          <h4>TODO:</h4>
          <ul>
            <%
            detail.todoLinks.forEach((link) =>
            {
              %><li><span><%- renderLink(link); %></span></li>
              <%
            }); %>
          </ul>
        </div>
      <%
      }//if(detail.todoLinks)
      %>
    </div>
    <%
  }//for(const detail of data.details)
}//if(data.details)
%>
<!-- details.ejs end -->
